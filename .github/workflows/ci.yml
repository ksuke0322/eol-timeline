name: CI

env:
  NODE_VERSION: '22.12.0'
  PNPM_VERSION: '9.15.9'
  PATHS:
    - 'app/**'
    - '__e2e__'
    - '.storybook'
    - 'public'
    - 'test'
    - 'components.json'
    - '.lighthouserc.js'
    - 'eslint.config.mjs'
    - 'playwright.config.ts'
    - 'react-router.config.ts'
    - 'tsconfig.json'
    - 'vite-plugin-remove-data-testid.ts'
    - 'vite.config.ts'
    - 'wrangler.jsonc'
    - 'package.json'
    - 'pnpm-lock.yaml'
    - '.github/workflows/**'

on:
  push:
    branches:
      - main
    paths: ${{ env.NODE_VERSION }}
  pull_request:
    branches:
      - main
    paths: ${{ env.NODE_VERSION }}

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}
          run_install: true

      # - name: Save node_modules as artifact
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: node_modules
      #     path: node_modules
      #     retention-days: 1

  lint:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}
          run_install: true

      # - name: Download node_modules artifact
      #   uses: actions/download-artifact@v4
      #   with:
      #     name: node_modules
      #     path: node_modules

      - name: Run lint
        run: pnpm lint

  test:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}
          run_install: true

      # - name: Download node_modules artifact
      #   uses: actions/download-artifact@v4
      #   with:
      #     name: node_modules
      #     path: node_modules

      - name: Run tests
        run: pnpm test

  tsc:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}
          run_install: true

      # - name: Download node_modules artifact
      #   uses: actions/download-artifact@v4
      #   with:
      #     name: node_modules
      #     path: node_modules

      - name: Run TypeScript check
        run: pnpm tsc

  build:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}
          run_install: true

      # - name: Download node_modules artifact
      #   uses: actions/download-artifact@v4
      #   with:
      #     name: node_modules
      #     path: node_modules

      - name: Build project
        run: pnpm build

  test-storybook:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}
          run_install: true

      # - name: Download node_modules artifact
      #   uses: actions/download-artifact@v4
      #   with:
      #     name: node_modules
      #     path: node_modules

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Run Storybook tests
        run: pnpm test-storybook

  e2e-test:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}
          run_install: true

      # - name: Download node_modules artifact
      #   uses: actions/download-artifact@v4
      #   with:
      #     name: node_modules
      #     path: node_modules

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Run E2E tests
        run: pnpm test:e2e

  security-audit:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}
          run_install: true

      # - name: Download node_modules artifact
      #   uses: actions/download-artifact@v4
      #   with:
      #     name: node_modules
      #     path: node_modules

      - name: Run security audit
        run: pnpm audit --audit-level=moderate

  format-check:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}
          run_install: true

      # - name: Download node_modules artifact
      #   uses: actions/download-artifact@v4
      #   with:
      #     name: node_modules
      #     path: node_modules

      - name: Check code formatting
        run: pnpm prettier --check

  lighthouse:
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}
          run_install: true

      # - name: Download node_modules artifact
      #   uses: actions/download-artifact@v4
      #   with:
      #     name: node_modules
      #     path: node_modules

      - name: Run Lighthouse and assertion results
        uses: treosh/lighthouse-ci-action@v12
        with:
          configPath: './.lighthouserc.js'

  deploy:
    runs-on: ubuntu-latest
    needs:
      [
        lint,
        build,
        test,
        tsc,
        test-storybook,
        e2e-test,
        security-audit,
        format-check,
        lighthouse,
      ]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

  delete-artifacts:
    runs-on: ubuntu-latest
    needs:
      [
        lint,
        build,
        test,
        tsc,
        test-storybook,
        e2e-test,
        security-audit,
        format-check,
        lighthouse,
      ]
    steps:
      - uses: geekyeggo/delete-artifact@v4
        with:
          name: '*' # 全部対象
